"""
Django settings for regs project.

Generated by 'django-admin startproject' using Django 2.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__))) # корень всего проекта


# ключ, используется при создании защищенного механизма обмена информации через форму
SECRET_KEY = 'w^!h17c28gl_cooyg)+c7s*@rh9miwbrvkgota^vdd1e+l=*_g'

DEBUG = True # режим разработки, не оставлять в продакшене потому что медленно будет работать

ALLOWED_HOSTS = [] # список доменных имен, с которых можно обращаться к нашему серверу.
                   # Например: 'localhost'. Тогда нужно будет писать нет 127.0.0.1:8000 а localhost:8000



INSTALLED_APPS = [ # регистрация приложений
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'app',
]

MIDDLEWARE = [ # промежуточные обработчики, которые проверяют корректность запроса
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'regs.urls' # путь к файлу с урлами(ссылками)

TEMPLATES = [ # файлы, в которые будут подставляться динамические данные и будет генерироваться HTML страничка
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'regs.wsgi.application' # путь к файлу, который содержит инструкции как запускать WSGI сервер
                                           # (сервер который будет конвертировать HTTP запросы от клиента в питон запросы)


DATABASES = { # база данных
    'default': {
        'ENGINE': 'django.db.backends.sqlite3', # движок
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'), # имя
    }
}


AUTH_PASSWORD_VALIDATORS = [ # механизм валидации паролей
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator', # чтобы не было похоже на имя пользователя
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator', # минимальная длина
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator', # нельзя использовать частые пароли (1234)
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator', # должна быть хотя бы одна цифра
    },
]


LANGUAGE_CODE = 'en-us' # язык пользовательского интерфейса

TIME_ZONE = 'UTC' # часово пояс ('Europe/Moscow')

USE_I18N = True # корректно работать с языками и датами

USE_L10N = True # корректно работать с языками и датами

USE_TZ = True # корректно работать с языками и датами


STATIC_URL = '/static/' # урл по которому можно получить нашу статику (файлы которые не меняются от изменения запроса                             )

# Также можно добавить свой код
EMAIL_CONTACT = 'sma8800@mail.ru' # используется в views.py